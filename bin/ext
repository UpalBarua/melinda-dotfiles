#!/usr/bin/env bash

# Archive Extraction Script
# Usage: ex <file>

set -euo pipefail

ex() {
    local file="$1"

    if [[ ! -f "$file" ]]; then
        echo "Error: '$file' is not a valid file." >&2
        return 1
    fi

    local filename
    filename=$(basename -- "$file")
    local dirname="${filename%.*}"

    # Handle multi-extension formats like .tar.gz, .tar.bz2, etc.
    case "$filename" in
        *.tar.gz|*.tgz)     dirname="${filename%.tar.gz}"; dirname="${dirname%.tgz}" ;;
        *.tar.bz2|*.tbz2)   dirname="${filename%.tar.bz2}"; dirname="${dirname%.tbz2}" ;;
        *.tar.xz)           dirname="${filename%.tar.xz}" ;;
        *.tar.zst)          dirname="${filename%.tar.zst}" ;;
        *.zip)              dirname="${filename%.zip}" ;;
        *.rar)              dirname="${filename%.rar}" ;;
        *.7z)               dirname="${filename%.7z}" ;;
        *.gz)               dirname="${filename%.gz}" ;;
        *.bz2)              dirname="${filename%.bz2}" ;;
        *.tar)              dirname="${filename%.tar}" ;;
    esac

    mkdir -p "$dirname"
    pushd "$dirname" > /dev/null

    case "$filename" in
        *.tar.bz2|*.tbz2)   tar xjf "../$file" ;;
        *.tar.gz|*.tgz)     tar xzf "../$file" ;;
        *.tar.xz)           tar xf "../$file" ;;
        *.tar.zst)          unzstd -c "../$file" | tar xf - ;;
        *.tar)              tar xf "../$file" ;;
        *.bz2)              bunzip2 -c "../$file" > "${dirname}.txt" ;;
        *.gz)               gunzip -c "../$file" > "${dirname}.txt" ;;
        *.zip)              unzip "../$file" ;;
        *.rar)              unrar x "../$file" ;;
        *.7z)               7z x "../$file" ;;
        *)                  echo "Error: '$file' cannot be extracted via this script." >&2 ;;
    esac

    popd > /dev/null
}

# Main execution
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    if [[ $# -ne 1 ]]; then
        echo "Usage: $0 <file>" >&2
        exit 1
    fi
    ex "$1"
fi

