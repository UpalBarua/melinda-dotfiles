# base configurations
set shell sh
set ignorecase true
set icons true
set drawbox
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
set preview true
set cleaner '~/.config/lf/scripts/cleaner'
set previewer '~/.config/lf/scripts/scope'
set cursorpreviewfmt ""

# custom functions

# new folder
cmd mkdir %{{
  printf " Directory Name: "
  read ans
  mkdir $ans
}}

# new file
cmd mkfile %{{
  printf " File Name: "
  read ans
  touch $ans
}}

# trash 
cmd trash %trash-put $fx
cmd trash-clear & rm -rf ~/.trash/*

# delete
cmd delete %{{
  set -f
  printf "$fx\n"
  printf " Delete permanently? [y/n] "
  read ans
  [ $ans = "y" ] && rm -rf $fx
}}

# zoxide integration
cmd z %{{
    result="$(zoxide query --exclude "$PWD" "$@" | sed 's/\\/\\\\/g;s/"/\\"/g')"
    lf -remote "send $id cd \"$result\""
}}

cmd zi ${{
    result="$(zoxide query -i | sed 's/\\/\\\\/g;s/"/\\"/g')"
    lf -remote "send $id cd \"$result\""
}}

cmd on-cd &{{
    zoxide add "$PWD"
}}

cmd on-cd &{{
    fmt="$(STARSHIP_SHELL= starship prompt | sed 's/\\/\\\\/g;s/"/\\"/g')"
    lf -remote "send $id set promptfmt \"$fmt\""
}}

# eza integration
cmd on-select &{{
  lf -remote "send $id set statfmt \"$(eza -ld --no-user --color=always "$f")\""
}}

# find files
cmd fzf_jump ${{
  res="$(find . -maxdepth 1 | fzf --reverse --header='Jump to location')"
  if [ -n "$res" ]; then
    if [ -d "$res" ]; then
      cmd="cd"
    else
      cmd="select"
    fi
    res="$(printf '%s' "$res" | sed 's/\\/\\\\/g;s/"/\\"/g')"
    lf -remote "send $id $cmd \"$res\""
  fi
}}

# find text
cmd fzf_search ${{
  RG_PREFIX="rg --column --line-number --no-heading --color=always --smart-case "
  res="$(
    FZF_DEFAULT_COMMAND="$RG_PREFIX ''" \
      fzf --bind "change:reload:$RG_PREFIX {q} || true" \
      --ansi --layout=reverse --header 'Search in files' \
      | cut -d':' -f1 | sed 's/\\/\\\\/g;s/"/\\"/g'
  )"
  [ -n "$res" ] && lf -remote "send $id select \"$res\""
}}

# extract archive
cmd extract ${{
  set -f
  atool -x $f
}}

# compress files 
cmd zip %zip -r "$f" "$f"
cmd targz %tar cvzf "$f.tar.gz" "$f"

# set as bg
cmd setwallpaper %feh --bg-fill "$f"

# open with
cmd open-with %"$@" "$fx"

# open
cmd open &{{
  case $(file --mime-type -bL -- "$f") in
    text/*|application/json)
      lf -remote "send $id \$$EDITOR \$fx" ;;
    image/*)
      rotdir $f | grep -i "\.\(png\|jpg\|jpeg\|gif\|webp\|tif\|ico\)\(_large\)*$" |
        setsid -f nsxiv -aio 2>/dev/null | while read -r file; do
          [ -z "$file" ] && continue
          lf -remote "send select \"$file\""
          lf -remote "send toggle"
        done &
        ;;
    audio/*)
      mpv --no-terminal "$fx"
      ;;
    video/*)
      mpv --no-terminal "$f" 
      ;;
    application/pdf|application/epub+zip)
      zathura "$f" 
      ;;
    *)
      for f in $fx; do
        xdg-open "$f" > /dev/null 2>&1 &
      done 
      ;;
  esac
}}

# key bindings

# remove defaults
map m
map o
map n
map "'"
map '"'
map d
map c
map e
map f

# functions
map K half-up  
map J half-down
map . set hidden!
map <delete> trash
map dd trash 
map DD delete
map p paste
map x cut
map y copy
map <enter> open
map R reload
map mf mkfile
map md mkdir
map bg setwallpaper
map e extract
map C clear
map TC trash-clear
map f fzf_jump 
map o push :open-with<space>
map br $vimv $fx
map z push :z<space>
map gs :fzf_search

# jumps
map gh cd ~/
map gC cd ~/.config
map gT cd ~/.local/share/Trash
map ge. cd /mnt/disk/
map gd cd ~/Downloads
map gc cd ~/code

map gpw cd "~/Pictures/wallpapers"
map gps cd ~/Pictures/screenshots
